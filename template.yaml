AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Sample SAM template that deploys an S3 bucket and Lambda function using a container image

Resources:
  TodamBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "todam-bucket-${AWS::AccountId}-${AWS::Region}"

  PutLogToDBFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      PackageType: Zip
      Handler: put_line_log_to_db.lambda_handler
      Runtime: python3.11
      Environment:
        Variables:
          S3_BUCKET: !Sub "todam-bucket-${AWS::AccountId}-${AWS::Region}"
      Architectures:
        - x86_64
      Events:
        TodamBucket:
          Type: S3
          Properties:
            Bucket: !Ref TodamBucket
            Events: s3:ObjectCreated:*
      Policies:
        - S3ReadPolicy:
            BucketName: !Sub "todam-bucket-${AWS::AccountId}-${AWS::Region}"
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDBTable
  StartRecordingChatApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
  StartRecordingChatFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      PackageType: Zip
      Handler: start_recording_chat.lambda_handler
      Runtime: python3.11
      Environment:
        Variables:
          S3_BUCKET: !Sub "todam-bucket-${AWS::AccountId}-${AWS::Region}"
      Architectures:
        - x86_64
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /start-recording-chat
            Method: POST
            RestApiId:
              Ref: StartRecordingChatApi
      Policies:
        - S3ReadPolicy:
            BucketName: !Sub "todam-bucket-${AWS::AccountId}-${AWS::Region}"
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDBTable
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: todam_table
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        - AttributeName: "group_id"
          AttributeType: "S"
        - AttributeName: "send_timestamp"
          AttributeType: "N"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: "GroupTimeIndex"
          KeySchema:
            - AttributeName: "group_id"
              KeyType: "HASH"
            - AttributeName: "send_timestamp"
              KeyType: "RANGE"
          Projection:
            ProjectionType: "ALL"
Outputs:
  TodamBucketName:
    Value: !Ref TodamBucket
    Description: "TodamBucketName Name"
  PutLogToDBFunction:
    Value: !Ref PutLogToDBFunction
    Description: "PutLogToDBFunction Name"
  StartRecordingChatApi:
    Description: "Start recording chat API Endpoint URL"
    Value: !Sub "https://${StartRecordingChatApi}.execute.api.${AWS::Region}.amazonaws.com/dev/start-recording-chat"
